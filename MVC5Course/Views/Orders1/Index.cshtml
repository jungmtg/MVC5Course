@model IEnumerable<MVC5Course.Models.Order>

@using PagedList
@using PagedList.Mvc

@{
    var data = Model as IPagedList;
}


@{
    if (IsAjax)
    {
        Layout = "";
    }
    ViewBag.Title = "Index";

    var CommonAjaxOptions = new AjaxOptions() {
        UpdateTargetId = "Details",
        LoadingElementId = "loading",
        OnSuccess = "ajaxSuccess"
    };
}

@if (TempData["Msg"] != null)
{
    <script>
        alert('@Ajax.JavaScriptStringEncode(Convert.ToString(TempData["Msg"]))');
    </script>
}

@section Scripts {
    <script>
        function ajaxSuccess() {
            console.log('Succeed');
        }
    </script>
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.OrderDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.OrderTotal)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.OrderStatus)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Client.FirstName)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.OrderDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.OrderTotal)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.OrderStatus)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Client.FirstName)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.OrderId }) |
            @Html.ActionLink("Details", "Details", new { id=item.OrderId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.OrderId })
        </td>
    </tr>
}

</table>

@Html.PagedListPager(data, p => Url.Action("Index", new { pageNo = p }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing("#main"))

<div id="Details"></div>


